{"version":3,"file":"static/js/819.e0b276da.chunk.js","mappings":"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","sources":["components/appBanner/AppBanner.js","components/errorBoundary/ErrorBoundary.js","components/errorMasage/ErrorMasage.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","services/MarvelServices.js","Hooks/http.hook.js","utils/setContentList.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengerslogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () =>{\n\treturn(\n\t\t<div className=\"comicstop\">\n\t\t\t<div className=\"comicstop__avengers\">\n\t\t\t\t<img src={avengers} alt=\"avengers\" />\n\t\t\t</div>\n\t\t\t<div className=\"comicstop__content\">\n\t\t\t\tNew comics every week!<br />\n\t\t\t\tStay tuned!\n\t\t\t</div>\n\t\t\t<div className=\"comicstop__avengerslogo\">\n\t\t\t\t<img src={avengerslogo} alt=\"avengerslogo\"/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default AppBanner;","import { Component } from \"react\";\r\nimport ErrorMasage from \"../errorMasage/ErrorMasage\";\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\t// static getDerivedStateFromError(error){\r\n\t// \treturn {error: true};\r\n\t// }\r\n\r\n\tcomponentDidCatch(error, errorInfo){\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({error: true});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.error){\r\n\t\t\treturn <ErrorMasage/>;\r\n\t\t}\r\n\t\t\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import error from './error.gif';\r\n\r\nconst ErrorMasage = () =>{\r\n\treturn(\r\n\t\t<img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}\r\n\t\tsrc={error} alt=\"error\"/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMasage;","import './comicsList.scss';\nimport { useState, useEffect } from 'react';\nimport useMarvelService from '../../services/MarvelServices';\nimport setContentList from '../../utils/setContentList';\nimport { Link } from 'react-router-dom';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ComicsList = () =>{\n\t\n\tconst {process, setProcess, getAllComics} = useMarvelService();\n\tconst [comicsList, setComicsList] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [comicsEnded, setComicsEnded] = useState(false);\n\n\tuseEffect(() =>{\n\t\tonRequest(offset, true);\n\t}, [])\n\t\n\tconst onRequest = (offset, initial) =>{\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllComics(offset)\n\t\t.then(onComicsLoaded)\n\t\t.then(() => setProcess(\"confirmed\"));\n\t}\t\n\n\tconst onComicsLoaded = (newComics) => {\n\t\tlet ended = false;\n\t\tif(newComics.length < 8){\n\t\t\tended = true;\n\t\t}\n\n\t\tsetComicsList(comicsList => [...comicsList, ...newComics]);\n\t\tsetNewItemLoading(false);\n\t\tsetOffset(offset => offset + 8);\n\t\tsetComicsEnded(ended);\n\t}\n\n\tconst itemsList = (arr) =>{\n\t\tconst elements = arr.map((item, i)=> {\n\t\t\tlet imgFit = 'cover';\n\t\t\tif(item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'){\n\t\t\t\timgFit = 'unset';\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<CSSTransition key = {i} classNames={\"comicslist__item\"} timeout={700}>\n\t\t\t\t\t<li className=\"comicslist__item\">\n\t\t\t\t\t\t<Link to={`/comics/${item.id}`}>\n\t\t\t\t\t\t<div className=\"comicslist__item__img\">\n\t\t\t\t\t\t\t<img src={item.thumbnail} style={{ objectFit: `${imgFit}`}} alt={item.title} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"comicslist__item__title\">\n\t\t\t\t\t\t\t{item.title}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"comicslist__item__price\">\n\t\t\t\t\t\t\t{item.price}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\n\t\treturn(\n\t\t\t<ul className=\"comicslist__grid\">\n\t\t\t<TransitionGroup component={null}>\n\t\t\t\t{elements}\n\t\t\t</TransitionGroup>\n\t\t\t</ul>\n\t\t)\n\t} \n\n\treturn(\n\t\t<div className=\"comicslist\">\n\t\t\t{setContentList(process,() => itemsList(comicsList), newItemLoading)}\n\t\t\t<button \n\t\t\tdisabled={newItemLoading}\n\t\t\tstyle={{'display': comicsEnded ? 'none' : 'block'}}\n\t\t\tonClick={() => onRequest(offset)}\n\t\t\tclassName=\"button button__main button__long\">\n\t\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\nexport default ComicsList;","import AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nconst ComicsPage = () =>{\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<Helmet>\r\n\t\t\t\t<meta \r\n\t\t\t\t\tname=\"descriptmeta\"\r\n\t\t\t\t\tcontent=\"Page with list of our comics\"\r\n\t\t\t\t/>\r\n\t\t\t\t<title>Comics page</title>\r\n\t\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<AppBanner/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<ComicsList/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default ComicsPage;","import { useHttp } from \"../Hooks/http.hook\";\r\n\r\nconst useMarvelService  = () =>{\r\n\tconst {request, clearError, process, setProcess} = useHttp();\r\n\t\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=7de4f012d99c5c5bd16a21956155921f';\r\n\tconst _baseOffset = 0;\r\n\tconst _baseId = 1003;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\t\treturn res.data.results.map(_transformCharcter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\t\treturn _transformCharcter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharacterByName = async (name) =>{ \r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharcter);\r\n\t}\r\n\r\n\tconst _transformCharcter = (char) => {\t\t\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t\t// ComicId: char.comics.\r\n\t\t}\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\t\t\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id = _baseId) => {\r\n\t\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\r\n\r\nconst _transformComics = (comics) => {\r\n\treturn {\r\n\t\tid: comics.id,\r\n\t\ttitle: comics.title,\r\n\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE',\r\n\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\tpageCount: comics.pageCount ? comics.pageCount : 'NOT FOUND',\r\n\t\tdescription: comics.textObjects.length === 0 ? 'NOT FOUND' : comics.textObjects[0].text,\r\n\t\tlanguage: comics.textObjects.length === 0 ? 'NOT FOUND' : comics.textObjects[0].language\r\n\t}\r\n}\r\n\r\n\treturn {\r\n\t\tprocess, \r\n\t\tsetProcess,\r\n\t\tclearError, \r\n\t\tgetCharacter, \r\n\t\tgetAllCharacters,\r\n\t\tgetAllComics, \r\n\t\tgetComic, \r\n\t\tgetCharacterByName\r\n\t};\r\n}\r\n\r\nexport default useMarvelService;","import {useCallback, useState} from 'react';\r\n\r\nexport const useHttp = () =>{\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback( async (url, method = 'GET', body = null, headers = {'Content-Type': 'aplication/json'}) =>{\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry{\r\n\t\t\tconst respons = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!respons.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${respons.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await respons.json();\r\n\r\n\t\t\treturn data;\t\t\t\r\n\t\t} catch(e){\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() =>{\r\n\t\tsetProcess('waiting');\r\n\t}, []);\r\n\t\r\n\treturn {request ,  clearError, process, setProcess}\r\n}","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMasage from \"../components/errorMasage/ErrorMasage\";\r\n\r\nconst setContentList = (process, Component ,newItemLoading) =>{\r\n\tswitch(process){\r\n\t\tcase \"waiting\":\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase \"loading\":\r\n\t\t\treturn newItemLoading ? <Component/> : <Spinner/>;\r\n\t\tcase \"confirmed\":\r\n\t\t\treturn <Component/>;\r\n\t\tcase \"error\":\r\n\t\t\treturn <ErrorMasage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default setContentList"],"names":["_jsxs","className","children","_jsx","src","avengers","alt","avengerslogo","ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","error","_createClass","key","value","errorInfo","console","log","this","setState","ErrorMasage","props","Component","style","display","width","height","objectFit","margin","_useMarvelService","useMarvelService","process","setProcess","getAllComics","_useState","useState","_useState2","_slicedToArray","comicsList","setComicsList","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","comicsEnded","setComicsEnded","useEffect","onRequest","initial","then","onComicsLoaded","newComics","ended","_toConsumableArray","setContentList","arr","elements","map","item","i","imgFit","thumbnail","CSSTransition","classNames","timeout","Link","to","id","title","price","TransitionGroup","component","itemsList","disabled","onClick","_Fragment","Helmet","name","content","AppBanner","ComicsList","_useHttp","request","useCallback","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","respons","data","_args","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","stop","_x","clearError","useHttp","_apiBase","_apiKey","getAllCharacters","res","results","_transformCharcter","getCharacter","_ref2","_callee2","_context2","getCharacterByName","_ref3","_callee3","_context3","_x2","char","description","path","extension","homepage","urls","wiki","comics","items","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_args5","_context5","prices","pageCount","textObjects","text","language","Spinner"],"sourceRoot":""}