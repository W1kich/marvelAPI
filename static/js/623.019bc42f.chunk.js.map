{"version":3,"file":"static/js/623.019bc42f.chunk.js","mappings":"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","sources":["components/errorBoundary/ErrorBoundary.js","components/errorMasage/ErrorMasage.js","components/randomChar/RandomChar.js","components/charList/CharList.js","components/charInfo/CharInfo.js","components/charForm/CharForm.js","components/pages/MainPage.js","services/MarvelServices.js","Hooks/http.hook.js","components/skeleton/Skeleton.js","utils/setContent.js","utils/setContentList.js"],"sourcesContent":["import { Component } from \"react\";\r\nimport ErrorMasage from \"../errorMasage/ErrorMasage\";\r\nclass ErrorBoundary extends Component {\r\n\tstate = {\r\n\t\terror: false\r\n\t}\r\n\r\n\t// static getDerivedStateFromError(error){\r\n\t// \treturn {error: true};\r\n\t// }\r\n\r\n\tcomponentDidCatch(error, errorInfo){\r\n\t\tconsole.log(error, errorInfo);\r\n\t\tthis.setState({error: true});\r\n\t}\r\n\r\n\trender(){\r\n\t\tif(this.state.error){\r\n\t\t\treturn <ErrorMasage/>;\r\n\t\t}\r\n\t\t\r\n\t\treturn this.props.children;\r\n\t}\r\n}\r\n\r\nexport default ErrorBoundary;","import error from './error.gif';\r\n\r\nconst ErrorMasage = () =>{\r\n\treturn(\r\n\t\t<img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}\r\n\t\tsrc={error} alt=\"error\"/>\r\n\t)\r\n}\r\n\r\nexport default ErrorMasage;","import {useEffect, useState} from 'react';\n\nimport './randomChar.scss';\nimport mjolnir from '../../resources/img/mjolnir.png';\nimport useMarvelService from '../../services/MarvelServices';\nimport setContent from '../../utils/setContent';\n\nconst RandomChar = (props) =>{\n\n\tconst [char, setChar] = useState({});\n\tconst {process, setProcess, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() =>{\n\t\tupdateChar();\n\t\t\n\t\tconst timerID = setInterval(updateChar, 60000);\n\n\t\treturn () =>{\n\t\t\tclearInterval(timerID);\n\t\t}\n\t}, [])\n\n\tconst onCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\n\tconst updateChar = () =>{\n\t\tclearError();\n\t\tconst id = Math.floor(Math.random() *(1011400 - 1011000) + 1011000);\n\t\tgetCharacter(id)\n\t\t.then(onCharLoaded)\n\t\t.then(() => setProcess(\"confirmed\"));;\n\t}\n\n\treturn (\n\t\t<div className=\"randomchar\">\n\t\t\t\t{setContent(process, View, char)}\n\t\t\t\t<div className=\"randomchar__static\">\n\t\t\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\t\t\t\tRandom character for today!<br/>\n\t\t\t\t\t\t\t\tDo you want to get to know him better?\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className=\"randomchar__title\">\n\t\t\t\t\t\t\t\tOr choose another one\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<button onClick={updateChar} className=\"button button__main\">\n\t\t\t\t\t\t\t\t<div className=\"inner\">try it</div>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst View = ({data}) =>{\n\tconst {name, description, thumbnail, homepage, wiki} = data;\n\n\tconst onTryDesc = (desc) =>{\n\t\tif(typeof(desc) !== 'string'){\n\t\t\treturn desc;\n\t\t}else{\n\t\t\tif(desc === ''){\n\t\t\t\treturn \"This character does't have a description\";\n\t\t\t}else if(desc.length > 227){\n\t\t\t\treturn desc.slice(0, 212) + '...';\n\t\t\t}\n\t\t}\n\t\treturn desc;\n\t}\n\n\tconst desc = onTryDesc(description);\n\tlet imgFit = 'cover';\n\n\tif(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'){\n\t\timgFit = 'contain';\n\t}\n\n\treturn(\n\t\t<div className=\"randomchar__block\">\n\t\t\t\t<img src={thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={{ objectFit: `${imgFit}`}}/>\n\t\t\t\t<div className=\"randomchar__info\">\n\t\t\t\t\t\t<p className=\"randomchar__name\">{name}</p>\n\t\t\t\t\t\t<p className=\"randomchar__descr\">\n\t\t\t\t\t\t\t\t{desc}\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<div className=\"randomchar__btns\">\n\t\t\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default RandomChar;","import './charList.scss';\n\nimport { useState, useEffect, useRef } from 'react';\nimport useMarvelService from '../../services/MarvelServices';\nimport setContentList from '../../utils/setContentList';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\n\n\n\nconst CharList = (props) => {\n\n\tconst refArr = useRef([]);\n\n\tconst setClass = (id) =>{\n\t\trefArr.current.forEach(item => item.classList.remove(\"char__item_selected\"));\n\t\trefArr.current[id].classList.add(\"char__item_selected\");\n\t\trefArr.current[id].focus();\n\t}\n\n\tconst [chars, setChars] = useState([]);\n\tconst [newItemLoading, setNewItemLoading] = useState(false);\n\tconst [offset, setOffset] = useState(0);\n\tconst [charEnded, setCharEnded] = useState(false);\n\n\tconst {process, setProcess, getAllCharacters} = useMarvelService();\n\n\tuseEffect(() =>{\n\t\tonRequest(offset, true);\n\t}, [])\n\t\n\tconst onRequest = (offset, initial) =>{\n\t\tinitial ? setNewItemLoading(false) : setNewItemLoading(true);\n\t\tgetAllCharacters(offset)\n\t\t.then(onCharLoaded)\n\t\t.then(() => setProcess(\"confirmed\"));;\n\t}\n\t\n\n\tconst onCharLoaded = (newChars) => {\n\t\tlet ended = false;\n\t\tif(newChars.length < 9){\n\t\t\tended = true;\n\t\t}\n\n\t\tsetChars(chars => [...chars, ...newChars]);\n\t\tsetNewItemLoading(newItemLoading => false);\n\t\tsetOffset(offset => offset + 9);\n\t\tsetCharEnded(charEnded => ended)\n\t}\n\t\n\tfunction ListItems(){\n\t\tconst elements = chars.map((item, i)=> {\n\t\t\tlet imgFit = 'cover';\n\t\t\tif(item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'){\n\t\t\t\timgFit = 'unset';\n\t\t\t}\n\t\t\treturn (\n\t\t\t\t<CSSTransition\n\t\t\t\t\tkey={i} timeout={700} classNames=\"char__item\"\n\t\t\t\t>\n\t\t\t\t\t<li className=\"char__item\"\n\t\t\t\t\ttabIndex={0}\n\t\t\t\t\tref={(el => refArr.current[i] = el)}\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\tsetClass(i);\n\t\t\t\t\t\t}}\n\t\t\t\t\tonKeyPress={(e) =>{\n\t\t\t\t\t\tif (e.key === ' ' || e.key === \"Enter\") {\n\t\t\t\t\t\t\tprops.onCharSelected(item.id);\n\t\t\t\t\t\t\tsetClass(i);\n\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<img src={item.thumbnail} alt={item.name} style={{ objectFit: `${imgFit}`}}/>\n\t\t\t\t\t\t<div className=\"char__name\">{item.name}</div>\n\t\t\t\t\t</li>\n\t\t\t\t</CSSTransition>\n\t\t\t);\n\t\t});\n\n\t\treturn (\n\t\t\t<ul className=\"char__grid\">\n\t\t\t\t<TransitionGroup component={null}>\n\t\t\t\t\t{elements}\n\t\t\t\t</TransitionGroup>\n\t\t\t</ul> \n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"char__list\">\n\t\t\t{setContentList(process,() => ListItems(chars), newItemLoading)}\n\t\t\t<button \n\t\t\tdisabled={newItemLoading}\n\t\t\tstyle={{'display': charEnded ? 'none' : 'block'}}\n\t\t\tonClick={() => onRequest(offset)}\n\t\t\tclassName=\"button button__main button__long\">\n\t\t\t\t\t<div className=\"inner\">load more</div>\n\t\t\t</button>\n\t\t\t</div>\n\t);\n}\n\nexport default CharList;","import './charInfo.scss';\n\nimport { useEffect, useState } from 'react';\nimport useMarvelService from '../../services/MarvelServices';\nimport {Link} from 'react-router-dom';\nimport setContent from '../../utils/setContent';\n\nconst CharInfo = (props) => {\n\n\tconst [char, setChar] = useState(null);\n\tconst {charId} = props;\n\tconst {process, setProcess, getCharacter, clearError} = useMarvelService();\n\n\tuseEffect(() =>{\n\t\tupdateChar();\n\t}, [charId])\n\n\n\tconst\tonCharLoaded = (char) => {\n\t\tsetChar(char);\n\t}\n\t\n\tconst updateChar = () =>{\n\t\tclearError();\n\t\tif(!charId){\n\t\t\treturn;\n\t\t}\n\t\tgetCharacter(charId)\n\t\t.then(onCharLoaded)\n\t\t.then(() => setProcess(\"confirmed\"));\n\t}\n\n\treturn (\n\t\t<div className=\"char__info\">\n\t\t\t{setContent(process,View ,char)}\n\t\t</div>\n\t)\t\n}\n\nconst View = ({data}) =>{\n\tconst {id ,name, description, thumbnail, homepage, wiki, comics} = data;\n\tlet imgFit = 'cover';\n\n\tif(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg' || thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/f/60/4c002e0305708.gif'){\n\t\timgFit = 'contain';\n\t}\n\t\n\treturn(\n\t\t<>\n\t\t\t<div className=\"char__basics\">\n\t\t\t\t<Link to={`marvelAPI/${id}`}>\n\t\t\t\t\t<img src={thumbnail} alt={name} style={{ objectFit: `${imgFit}`}}/>\n\t\t\t\t</Link>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t\t<div className=\"char__info-name\">{name}</div>\n\t\t\t\t\t\t\t<div className=\"char__btns\">\n\t\t\t\t\t\t\t\t\t<a href={homepage} className=\"button button__main\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"inner\">homepage</div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t\t\t<a href={wiki} className=\"button button__secondary\">\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"inner\">Wiki</div>\n\t\t\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"char__descr\">\n\t\t\t\t{description ? description : 'This character does not have a description'}\n\t\t\t</div>\n\t\t\t<div className=\"char__comics\">Comics:</div>\n\t\t\t<ul className=\"char__comics-list\">\n\t\t\t\t\t{comics.length > 0 ? null : 'This character does not have a comic'}\n\t\t\t\t\t{\n\t\t\t\t\t\tcomics.map((item, i) =>{\n\t\t\t\t\t\t\tif(i>9) return null;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn(\n\t\t\t\t\t\t\t\t<Link to={`/marvelAPI/comics/${item.resourceURI.slice(43)}`} className=\"char__comics-item\">\n\t\t\t\t\t\t\t\t\t<li key = {i} >\n\t\t\t\t\t\t\t\t\t\t{item.name} \n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t</ul>\n\t\t</>\n\t)\n}\n\nexport default CharInfo;","import './charForm.scss';\r\n\r\nimport * as Yup from 'yup';\r\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage} from 'formik';\r\nimport { useState } from 'react';\r\nimport useMarvelService from '../../services/MarvelServices';\r\nimport {Link} from 'react-router-dom';\r\nimport ErrorMasage from '../errorMasage/ErrorMasage';\r\n\r\n\r\nconst CharForm = () => {\r\n\r\n\tconst [char, setChar] = useState(null);\r\n\r\n\tconst {process, setProcess, getCharacterByName, clearError} = useMarvelService();\r\n\r\n\tconst onCharLoaded = (char) => {\r\n\t\tsetChar(char);\r\n\t}\r\n\t\r\n\tconst updateChar = (name) => {\r\n\t\tclearError();\r\n\t\tgetCharacterByName(name)\r\n\t\t\t\t.then(onCharLoaded)\r\n\t\t\t\t.then(() => setProcess(\"confirmed\"))\t;\r\n}\r\n\r\nconst errorMasage = process === 'error' ? <ErrorMasage/> : null;\r\nconst result = !char ? null : char.length > 0 ? \r\n\t<div className=\"char__search-wrapper\">\r\n\t\t<div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\r\n\t\t<Link to={`marvelAPI/${char[0].id}`} className=\"button button__secondary\">\r\n\t\t\t\t<div className=\"inner\">To page</div>\r\n\t\t</Link>\r\n\t</div>\r\n : <div className=\"char__search-error\">The character was not found. Check the name and try again</div>;\r\n\r\n\treturn (\r\n\t\t<div className=\"char__search-form\">\r\n\t\t\t<Formik initialValues = {{\r\n\t\t\t\tcharName: ''\r\n\t\t\t}}\r\n\t\t\tvalidationSchema = {Yup.object({\r\n\t\t\t\tcharName: Yup.string().required('This field is required')\r\n\t\t\t})}\r\n\t\t\tonSubmit = {({charName})=> updateChar(charName)}\r\n\t\t\t> \r\n\t\t\t\t<Form >\r\n\t\t\t\t\t<label className=\"char__search-label\" htmlFor=\"charName\">Or find a character by name:</label>\r\n\t\t\t\t\t<div className=\"char__search-wrapper\">\r\n\t\t\t\t\t\t<Field \r\n\t\t\t\t\t\t\tid=\"charName\" \r\n\t\t\t\t\t\t\tname='charName' \r\n\t\t\t\t\t\t\ttype='text' \r\n\t\t\t\t\t\t\tplaceholder=\"Enter name\"/>\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\t\ttype='submit' \r\n\t\t\t\t\t\t\tclassName=\"button button__main\"\r\n\t\t\t\t\t\t\tdisabled={process === 'loading'}>\r\n\t\t\t\t\t\t\t<div className=\"inner\">find</div>\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<FormikErrorMessage component=\"div\" className=\"char__search-error\" name=\"charName\" />\r\n\t\t\t\t</Form>\r\n\t\t\t</Formik>\r\n\t\t\t{result}\r\n\t\t\t{errorMasage}\r\n\t\t</div>\r\n\t\t\t\r\n\t)\r\n}\r\n\r\nexport default CharForm;","import {useState} from \"react\";\r\nimport {Helmet} from 'react-helmet';\r\n\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport CharForm from \"../charForm/CharForm\";\r\nimport ErrorBoundary from \"../errorBoundary/ErrorBoundary\";\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nconst MainPage = () =>{\r\n\t\r\n\tconst [selectedChar, setChar] = useState(null);\r\n\r\n\tfunction onCharSelected(id) {\r\n\t\tsetChar(id);\r\n\t}\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t<Helmet>\r\n\t\t\t<meta \r\n\t\t\t\tname=\"descriptmeta\"\r\n\t\t\t\tcontent=\"Marvel information portal\"\r\n\t\t\t/>\r\n\t\t\t<title>Marvel information portal</title>\r\n\t\t</Helmet>\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<RandomChar/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__content\">\r\n\t\t\t<ErrorBoundary>\r\n\t\t\t\t<CharList onCharSelected = {onCharSelected}/>\r\n\t\t\t</ErrorBoundary>\r\n\t\t\t<div className=\"char__infoandform\">\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharInfo charId = {selectedChar}/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t<CharForm/>\r\n\t\t\t\t</ErrorBoundary>\r\n\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n\t\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default MainPage;","import { useHttp } from \"../Hooks/http.hook\";\r\n\r\nconst useMarvelService  = () =>{\r\n\tconst {request, clearError, process, setProcess} = useHttp();\r\n\t\r\n\tconst _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n\tconst _apiKey = 'apikey=7de4f012d99c5c5bd16a21956155921f';\r\n\tconst _baseOffset = 0;\r\n\tconst _baseId = 1003;\r\n\r\n\tconst getAllCharacters = async (offset = _baseOffset) => {\r\n\t\t\tconst res = await request(`${_apiBase}characters?limit=9&offset=${offset}&${_apiKey}`);\r\n\t\t\treturn res.data.results.map(_transformCharcter);\r\n\t}\r\n\r\n\tconst getCharacter = async (id) => {\r\n\t\t\tconst res = await request(`${_apiBase}characters/${id}?${_apiKey}`);\r\n\t\t\treturn _transformCharcter(res.data.results[0]);\r\n\t}\r\n\r\n\tconst getCharacterByName = async (name) =>{ \r\n\t\tconst res = await request(`${_apiBase}characters?name=${name}&${_apiKey}`);\r\n\t\treturn res.data.results.map(_transformCharcter);\r\n\t}\r\n\r\n\tconst _transformCharcter = (char) => {\t\t\r\n\t\treturn {\r\n\t\t\tid: char.id,\r\n\t\t\tname: char.name,\r\n\t\t\tdescription: char.description,\r\n\t\t\tthumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n\t\t\thomepage: char.urls[0].url,\r\n\t\t\twiki: char.urls[1].url,\r\n\t\t\tcomics: char.comics.items\r\n\t\t\t// ComicId: char.comics.\r\n\t\t}\r\n\t}\r\n\r\n\tconst getAllComics = async (offset = _baseOffset) => {\r\n\t\tconst res = await request(`${_apiBase}comics?orderBy=issueNumber&limit=8&offset=${offset}&${_apiKey}`);\t\t\r\n\t\treturn res.data.results.map(_transformComics);\r\n\t}\r\n\r\n\tconst getComic = async (id = _baseId) => {\r\n\t\t\tconst res = await request(`${_apiBase}comics/${id}?${_apiKey}`);\r\n\t\t\treturn _transformComics(res.data.results[0]);\r\n\t}\r\n\r\n\r\n\r\nconst _transformComics = (comics) => {\r\n\treturn {\r\n\t\tid: comics.id,\r\n\t\ttitle: comics.title,\r\n\t\tprice: comics.prices[0].price ? `${comics.prices[0].price}$` : 'NOT AVAILABLE',\r\n\t\tthumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\r\n\t\tpageCount: comics.pageCount ? comics.pageCount : 'NOT FOUND',\r\n\t\tdescription: comics.textObjects.length === 0 ? 'NOT FOUND' : comics.textObjects[0].text,\r\n\t\tlanguage: comics.textObjects.length === 0 ? 'NOT FOUND' : comics.textObjects[0].language\r\n\t}\r\n}\r\n\r\n\treturn {\r\n\t\tprocess, \r\n\t\tsetProcess,\r\n\t\tclearError, \r\n\t\tgetCharacter, \r\n\t\tgetAllCharacters,\r\n\t\tgetAllComics, \r\n\t\tgetComic, \r\n\t\tgetCharacterByName\r\n\t};\r\n}\r\n\r\nexport default useMarvelService;","import {useCallback, useState} from 'react';\r\n\r\nexport const useHttp = () =>{\r\n\tconst [process, setProcess] = useState('waiting');\r\n\r\n\tconst request = useCallback( async (url, method = 'GET', body = null, headers = {'Content-Type': 'aplication/json'}) =>{\r\n\t\tsetProcess('loading');\r\n\r\n\t\ttry{\r\n\t\t\tconst respons = await fetch(url, {method, body, headers});\r\n\r\n\t\t\tif (!respons.ok) {\r\n\t\t\t\tthrow new Error(`Could not fetch ${url}, status: ${respons.status}`);\r\n\t\t\t}\r\n\r\n\t\t\tconst data = await respons.json();\r\n\r\n\t\t\treturn data;\t\t\t\r\n\t\t} catch(e){\r\n\t\t\tsetProcess('error');\r\n\t\t\tthrow e;\r\n\t\t}\r\n\t}, []);\r\n\r\n\tconst clearError = useCallback(() =>{\r\n\t\tsetProcess('waiting');\r\n\t}, []);\r\n\t\r\n\treturn {request ,  clearError, process, setProcess}\r\n}","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import Skeleton from \"../components/skeleton/Skeleton\";\r\nimport Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMasage from \"../components/errorMasage/ErrorMasage\";\r\n\r\nconst setContent = (process,Component ,data) =>{\r\n\tswitch(process){\r\n\t\tcase \"waiting\":\r\n\t\t\treturn <Skeleton/>;\r\n\t\tcase \"loading\":\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase \"confirmed\":\r\n\t\t\treturn <Component data={data}/>;\r\n\t\tcase \"error\":\r\n\t\t\treturn <ErrorMasage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default setContent;","import Spinner from \"../components/spinner/Spinner\";\r\nimport ErrorMasage from \"../components/errorMasage/ErrorMasage\";\r\n\r\nconst setContentList = (process, Component ,newItemLoading) =>{\r\n\tswitch(process){\r\n\t\tcase \"waiting\":\r\n\t\t\treturn <Spinner/>;\r\n\t\tcase \"loading\":\r\n\t\t\treturn newItemLoading ? <Component/> : <Spinner/>;\r\n\t\tcase \"confirmed\":\r\n\t\t\treturn <Component/>;\r\n\t\tcase \"error\":\r\n\t\t\treturn <ErrorMasage/>;\r\n\t\tdefault:\r\n\t\t\tthrow new Error('Unexpected process state');\r\n\t}\r\n}\r\n\r\nexport default setContentList"],"names":["ErrorBoundary","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","error","_createClass","key","value","errorInfo","console","log","this","setState","_jsx","ErrorMasage","props","children","Component","style","display","width","height","objectFit","margin","src","alt","View","_ref","data","name","description","thumbnail","homepage","wiki","desc","slice","onTryDesc","imgFit","_jsxs","className","href","_useState","useState","_useState2","_slicedToArray","char","setChar","_useMarvelService","useMarvelService","process","setProcess","getCharacter","clearError","useEffect","updateChar","timerID","setInterval","clearInterval","onCharLoaded","id","Math","floor","random","then","setContent","onClick","mjolnir","refArr","useRef","setClass","current","forEach","item","classList","remove","add","focus","chars","setChars","_useState3","_useState4","newItemLoading","setNewItemLoading","_useState5","_useState6","offset","setOffset","_useState7","_useState8","charEnded","setCharEnded","getAllCharacters","onRequest","initial","newChars","ended","_toConsumableArray","setContentList","elements","map","i","CSSTransition","timeout","classNames","tabIndex","ref","el","onCharSelected","onKeyPress","e","TransitionGroup","component","ListItems","disabled","comics","_Fragment","Link","to","resourceURI","charId","getCharacterByName","errorMasage","result","Formik","initialValues","charName","validationSchema","Yup","required","onSubmit","Form","htmlFor","Field","type","placeholder","FormikErrorMessage","selectedChar","Helmet","content","RandomChar","CharList","CharInfo","CharForm","decoration","_useHttp","request","useCallback","_asyncToGenerator","_regeneratorRuntime","mark","_callee","url","method","body","headers","respons","_args","wrap","_context","prev","next","undefined","fetch","sent","ok","Error","status","json","abrupt","t0","stop","_x","useHttp","_apiBase","_apiKey","res","results","_transformCharcter","_ref2","_callee2","_context2","_ref3","_callee3","_context3","_x2","path","extension","urls","items","getAllComics","_ref4","_callee4","_args4","_context4","_transformComics","getComic","_ref5","_callee5","_args5","_context5","title","price","prices","pageCount","textObjects","text","language","Skeleton","Spinner"],"sourceRoot":""}